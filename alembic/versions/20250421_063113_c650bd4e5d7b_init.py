"""init

Revision ID: c650bd4e5d7b
Revises: 
Create Date: 2025-04-21 06:31:13.790291+00:00

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import mysql

# revision identifiers, used by Alembic.
revision: str = "c650bd4e5d7b"
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "connections",
        sa.Column(
            "id",
            sa.BigInteger().with_variant(mysql.BIGINT(unsigned=True), "mysql"),
            autoincrement=True,
            nullable=False,
            comment="自增主键",
        ),
        sa.Column(
            "name", sa.String(length=50), nullable=False, comment="连接名称"
        ),
        sa.Column(
            "host", sa.String(length=200), nullable=False, comment="主机地址"
        ),
        sa.Column("port", sa.Integer(), nullable=False, comment="端口"),
        sa.Column(
            "user", sa.String(length=50), nullable=False, comment="用户名"
        ),
        sa.Column(
            "password", sa.String(length=50), nullable=False, comment="密码"
        ),
        sa.Column(
            "database",
            sa.String(length=50),
            nullable=False,
            comment="数据库名",
        ),
        sa.Column("description", sa.Text(), nullable=True, comment="描述"),
        sa.Column(
            "created_at", sa.DateTime(), nullable=False, comment="创建时间"
        ),
        sa.Column(
            "updated_at", sa.DateTime(), nullable=False, comment="更新时间"
        ),
        sa.Column(
            "deleted_at", sa.DateTime(), nullable=True, comment="删除时间"
        ),
        sa.Column("deleted", sa.Boolean(), nullable=False, comment="是否删除"),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("name"),
    )
    op.create_table(
        "users",
        sa.Column(
            "id",
            sa.BigInteger().with_variant(mysql.BIGINT(unsigned=True), "mysql"),
            autoincrement=True,
            nullable=False,
            comment="自增主键",
        ),
        sa.Column(
            "username", sa.String(length=64), nullable=False, comment="用户名"
        ),
        sa.Column(
            "password_hash",
            sa.String(length=128),
            nullable=False,
            comment="密码哈希",
        ),
        sa.Column(
            "is_active", sa.Boolean(), nullable=False, comment="是否激活"
        ),
        sa.Column(
            "created_at", sa.DateTime(), nullable=False, comment="创建时间"
        ),
        sa.Column(
            "updated_at", sa.DateTime(), nullable=False, comment="更新时间"
        ),
        sa.Column(
            "deleted_at", sa.DateTime(), nullable=True, comment="删除时间"
        ),
        sa.Column("deleted", sa.Boolean(), nullable=False, comment="是否删除"),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("username"),
    )
    op.create_table(
        "tasks",
        sa.Column(
            "id",
            sa.BigInteger().with_variant(mysql.BIGINT(unsigned=True), "mysql"),
            autoincrement=True,
            nullable=False,
            comment="自增主键",
        ),
        sa.Column(
            "source_conn_id",
            sa.BigInteger().with_variant(mysql.BIGINT(unsigned=True), "mysql"),
            nullable=False,
            comment="源数据库连接ID",
        ),
        sa.Column(
            "source_conn_name",
            sa.String(length=50),
            nullable=False,
            comment="源数据库连接名称",
        ),
        sa.Column(
            "target_conn_id",
            sa.BigInteger().with_variant(mysql.BIGINT(unsigned=True), "mysql"),
            nullable=False,
            comment="目标数据库连接ID",
        ),
        sa.Column(
            "target_conn_name",
            sa.String(length=50),
            nullable=False,
            comment="目标数据库连接名称",
        ),
        sa.Column(
            "config", sa.JSON(), nullable=True, comment="比较配置（忽略项等）"
        ),
        sa.Column(
            "status",
            sa.Enum(
                "PENDING", "RUNNING", "COMPLETED", "FAILED", name="taskstatus"
            ),
            nullable=False,
        ),
        sa.Column(
            "created_at", sa.DateTime(), nullable=False, comment="创建时间"
        ),
        sa.Column(
            "updated_at", sa.DateTime(), nullable=False, comment="更新时间"
        ),
        sa.Column(
            "deleted_at", sa.DateTime(), nullable=True, comment="删除时间"
        ),
        sa.Column("deleted", sa.Boolean(), nullable=False, comment="是否删除"),
        sa.ForeignKeyConstraint(
            ["source_conn_id"],
            ["connections.id"],
        ),
        sa.ForeignKeyConstraint(
            ["target_conn_id"],
            ["connections.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "task_logs",
        sa.Column(
            "id",
            sa.BigInteger().with_variant(mysql.BIGINT(unsigned=True), "mysql"),
            autoincrement=True,
            nullable=False,
            comment="自增主键",
        ),
        sa.Column(
            "task_id",
            sa.BigInteger().with_variant(mysql.BIGINT(unsigned=True), "mysql"),
            nullable=False,
            comment="任务信息表ID",
        ),
        sa.Column(
            "status",
            sa.Enum(
                "PENDING", "RUNNING", "COMPLETED", "FAILED", name="taskstatus"
            ),
            nullable=False,
        ),
        sa.Column(
            "error_message",
            sa.String(length=500),
            nullable=True,
            comment="错误信息",
        ),
        sa.Column(
            "created_at", sa.DateTime(), nullable=False, comment="创建时间"
        ),
        sa.Column(
            "updated_at", sa.DateTime(), nullable=False, comment="更新时间"
        ),
        sa.Column(
            "deleted_at", sa.DateTime(), nullable=True, comment="删除时间"
        ),
        sa.Column("deleted", sa.Boolean(), nullable=False, comment="是否删除"),
        sa.ForeignKeyConstraint(
            ["task_id"],
            ["tasks.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "results",
        sa.Column(
            "id",
            sa.BigInteger().with_variant(mysql.BIGINT(unsigned=True), "mysql"),
            autoincrement=True,
            nullable=False,
            comment="自增主键",
        ),
        sa.Column(
            "task_log_id",
            sa.BigInteger().with_variant(mysql.BIGINT(unsigned=True), "mysql"),
            nullable=False,
            comment="任务执行日志表Id",
        ),
        sa.Column(
            "object_name",
            sa.String(length=50),
            nullable=False,
            comment="对象名称（表名、视图名等）",
        ),
        sa.Column(
            "has_differences",
            sa.Boolean(),
            nullable=False,
            comment="是否存在差异",
        ),
        sa.Column(
            "source_definition", sa.Text(), nullable=True, comment="源对象定义"
        ),
        sa.Column(
            "target_definition",
            sa.Text(),
            nullable=True,
            comment="目标对象定义",
        ),
        sa.Column(
            "difference_details", sa.JSON(), nullable=True, comment="差异详情"
        ),
        sa.Column("change_sql", sa.Text(), nullable=True, comment="变更SQL"),
        sa.Column(
            "file_path",
            sa.String(length=200),
            nullable=True,
            comment="差异文件路径",
        ),
        sa.Column(
            "created_at", sa.DateTime(), nullable=False, comment="创建时间"
        ),
        sa.Column(
            "updated_at", sa.DateTime(), nullable=False, comment="更新时间"
        ),
        sa.Column(
            "deleted_at", sa.DateTime(), nullable=True, comment="删除时间"
        ),
        sa.Column("deleted", sa.Boolean(), nullable=False, comment="是否删除"),
        sa.ForeignKeyConstraint(
            ["task_log_id"],
            ["task_logs.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("results")
    op.drop_table("task_logs")
    op.drop_table("tasks")
    op.drop_table("users")
    op.drop_table("connections")
    # ### end Alembic commands ###
